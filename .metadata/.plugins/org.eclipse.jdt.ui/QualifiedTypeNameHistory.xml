<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="java.util.concurrent.CountDownLatch"/>
<fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListener"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.apache.kafka.clients.consumer.ConsumerConfig"/>
<fullyQualifiedTypeName name="org.springframework.kafka.core.DefaultKafkaConsumerFactory"/>
<fullyQualifiedTypeName name="org.springframework.kafka.core.ConsumerFactory"/>
<fullyQualifiedTypeName name="org.springframework.kafka.annotation.KafkaListenerConfigurer"/>
<fullyQualifiedTypeName name="org.springframework.kafka.config.KafkaListenerContainerFactory"/>
<fullyQualifiedTypeName name="org.springframework.kafka.listener.ConcurrentMessageListenerContainer"/>
<fullyQualifiedTypeName name="org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory"/>
<fullyQualifiedTypeName name="test.belajar.main.Application"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMethod"/>
<fullyQualifiedTypeName name="gateway.GatewayMain"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.kafka.annotation.EnableKafka"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="org.apache.kafka.common.serialization.StringDeserializer"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="test.belajar.producer.Sender"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
<fullyQualifiedTypeName name="com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker"/>
<fullyQualifiedTypeName name="test.belajar.service.NotifService"/>
<fullyQualifiedTypeName name="org.springframework.boot.web.client.RestTemplateBuilder"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="java.net.URI"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="hystrixTes.HystrixTesMain"/>
<fullyQualifiedTypeName name="hystrixtes.HystrixTesMain"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="hystrixtes.service.HystrixTesService"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
<fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.EnableHystrix"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.turbine.EnableTurbine"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard"/>
</qualifiedTypeNameHistroy>
